# Required tools and their purposes:
# - fzf (Fuzzy Finder): Interactive filtering tool for command-line
#   https://github.com/junegunn/fzf
#   Used for: Interactive selection, preview windows, and fuzzy searching
#
# - fd (Find Alternative): Modern replacement for 'find'
#   https://github.com/sharkdp/fd
#   Used for: Fast file searching, respects .gitignore by default
#
# - bat (Cat Alternative): Cat clone with syntax highlighting
#   https://github.com/sharkdp/bat
#   Used for: Syntax-highlighted previews in fzf windows
#
# - ripgrep (rg): Modern grep alternative
#   https://github.com/BurntSushi/ripgrep
#   Used for: Fast content searching in files
#
# - eza: Modern replacement for ls
#   https://github.com/eza-community/eza
#   Used for: Directory tree previews in fzf

# Core FZF configuration
# Uses: fd for file finding
export FZF_DEFAULT_COMMAND="fd --type f --hidden --follow --exclude .git"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_ALT_C_COMMAND="fd --type d --hidden --follow --exclude .git"

#default use bat for previewing fzf results
#fzp fzf --preview='bat --color=always {}'

#use nvim for previewing and editing fzf results
#fzn nvim $(fzf --preview='bat --color=always {}' --preview-window=right:50%:wrap)

# Catppuccin Mocha theme configuration
export FZF_DEFAULT_OPTS=" \
--color=bg+:#313244,bg:#1e1e2e,spinner:#f5e0dc,hl:#f38ba8 \
--color=fg:#cdd6f4,header:#f38ba8,info:#cba6f7,pointer:#f5e0dc \
--color=marker:#b4befe,fg+:#cdd6f4,prompt:#cba6f7,hl+:#f38ba8 \
--border rounded \
--preview-window 'right:60%' \
--bind 'ctrl-/:toggle-preview' \
--bind 'ctrl-y:execute-silent(echo {} | pbcopy)' \
--multi"

# Enhanced preview options
# CTRL-T configuration: Preview file contents with bat
export FZF_CTRL_T_OPTS="
  --preview 'bat --style=numbers --color=always {}' \
  --bind 'ctrl-/:change-preview-window(down|hidden|)'"

# ALT-C configuration: Preview directory tree with eza
export FZF_ALT_C_OPTS="
  --preview 'eza --tree --level=2 --color=always {}' \
  --bind 'ctrl-/:change-preview-window(down|hidden|)'"

# Custom functions

# Use fd, fzf, and bat to find, preview, and edit a file in nvim
find_and_edit() {
  local file
  file=$(fd --type f --hidden --follow --exclude .git | fzf \
    --preview 'bat --style=numbers --color=always {}' \
    --bind 'ctrl-/:change-preview-window(down|hidden|)') && \
  ${EDITOR:-nvim} "$file"
}

# Use rg, fzf, and bat to find, preview, and edit a file in nvim
find_in_files() {
  local file line
  rg --color=always --line-number --no-heading "$@" |
    fzf --ansi \
        --delimiter : \
        --preview 'bat --style=numbers --color=always --highlight-line {2} {1}' \
        --preview-window 'up,60%,border-bottom,+{2}+3/3,~3' |
    awk -F: '{print $1 " +" $2}' |
    xargs -o ${EDITOR:-nvim}
}

# Use fzf to interactively switch git branches
find_and_checkout_git_branch() {
  local branches branch
  branches=$(git branch --all | grep -v HEAD) &&
  branch=$(echo "$branches" |
           fzf --ansi --preview 'git log --oneline --graph --date=short --color=always --pretty="format:%C(auto)%cd %h%d %s" $(sed "s/.* //" <<< {})' |
           sed "s/.* //") &&
  git checkout $(sed "s#^remotes/[^/]*/##" <<< "$branch")
}

# Use fzf to interactively checkout a git commit
find_and_checkout_git_commit() {
  local commits commit
  commits=$(git log --pretty=oneline --abbrev-commit --reverse) &&
  commit=$(echo "$commits" | fzf --ansi --preview 'git show --color=always {1}' --preview-window up,60%,border-bottom) &&
  git checkout $(echo "$commit" | sed "s/ .*//")
}

# Use fzf to interactively start a docker container
find_and_start_docker_container() {
  local cid
  cid=$(docker ps -a | sed 1d | fzf -1 -q "$1" | awk '{print $1}')
  [ -n "$cid" ] && docker start "$cid" && docker exec -it "$cid" /bin/bash
}

# fzf preview for tmux
# export FZF_TMUX_OPTS=" -p90%,70% "  
